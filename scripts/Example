#!/usr/bin/env python2
# -*- coding: utf-8 -*-
"""Functions:
      1. Parse HML sequences
      2. Match the correct HLA typing GL strings
      3. Sequence alignment to IMGT/HLA reference sequences
      4. Annoatate - Extract Exon/Intron.
"""
#from os import walk, environ
from Bio import SeqIO, AlignIO
# from subprocess import Popen, PIPE, STDOUT
# from os.path import join, abspath, dirname, split
# from glob import glob
# from qiime.util import get_qiime_scripts_dir
#import re  # regular expression

__author__ = "Hu Huang"
__copyright__ = "Copyright 2017, Hu Huang"
__credits__ = ["Add names"]
__license__ = "GPL"
__version__ = "dev"
__maintainer__ = "Hu Huang"
__email__ = "hwangtiger@gmail.com"


IMGT_db_fp = "../IMGTHLA/" 

with open(IMGT_db_fp+"/fasta/A_gen.fasta") as input_handle:
    for record in SeqIO.parse(input_handle, "fasta"):
        print(record.id)
 
IMGT_aligned_seqs = open(IMGT_db_fp + "/alignments/A_gen.txt", "r")
print IMGT_aligned_seqs.readlines(5)

##
aligned_seqs = AlignIO.parse(IMGT_db_fp + "/alignments/A_gen.txt", "clustal")
for seqs in aligned_seqs:
    print(len(seqs))
    print("")
##    

filename = IMGT_db_fp + "/alignments/A_gen.txt"






my_seq = SeqIO.parse("../Fasta_from_HML/1.0.1a_NGS1-1_HML_Haploid_Merged.fasta", "fasta")

seqs = SeqIO.read("../Fasta_from_HML/1.0.1a_NGS1-1_HML_Haploid_Merged.fasta", "fasta")

identifiers = [seq_record.id for seq_record in SeqIO.parse("../Fasta_from_HML/1.0.1a_NGS1-1_HML_Haploid_Merged.fasta", "fasta")]

records = list(SeqIO.parse("../Fasta_from_HML/1.0.1a_NGS1-1_HML_Haploid_Merged.fasta", "fasta"))
print("Found %i records" % len(records))

record_iterator = SeqIO.parse("../Fasta_from_HML/1.0.1a_NGS1-1_HML_Haploid_Merged.fasta", "fasta")
first_record = next(record_iterator)
print(first_record)

def get_accession(record):
    """"Given a SeqRecord, return the accession number as a string.
    e.g. "gi|2765613|emb|Z78488.1|PTZ78488" -> "Z78488.1"
    """
    parts = record.id.split("|")
    assert len(parts) == 5 and parts[0] == "gi" and parts[2] == "emb"
    return parts[3]