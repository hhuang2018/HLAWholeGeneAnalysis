#!/usr/bin/env python2
# -*- coding: utf-8 -*-
"""
Created on Thu Jul 20 11:26:49 2017

@author: Hu Huang (hwangtiger@gmail.com)
"""
"""Functions:
      1. Parse HML sequences
      2. Match the correct HLA typing GL strings
      3. Sequence alignment to IMGT/HLA reference sequences
      4. Annoatate - Extract Exon/Intron.
"""
from os import walk, environ
# from subprocess import Popen, PIPE, STDOUT
# from os.path import join, abspath, dirname, split
# from glob import glob
# from qiime.util import get_qiime_scripts_dir
# import re

__author__ = "Hu Huang"
__copyright__ = "Copyright 2017"
__credits__ = ["Add names"]
__license__ = "GPL"
__version__ = "dev"
__maintainer__ = "Hu Huang"
__email__ = "hwangtiger@gmail.com"

# import os

IMGT_db_fp = "IMGTHLA/"

IMGT_aligned_seqs = open(print(IMGT_db_fp + "/alignments/A_gen.txt"), "r")
print IMGT_aligned_seqs.readlines(5)


from Bio import SeqIO
counter = 0
for seq_record in SeqIO.parse("../Fasta_from_HML/1.0.1a_NGS1-1_HML_Haploid_Merged.fasta", "fasta"):
    print(seq_record.id)
    print(repr(seq_record.seq))
    print(len(seq_record))
    counter = counter +1
print(counter)
    
my_seq = SeqIO.parse("../Fasta_from_HML/1.0.1a_NGS1-1_HML_Haploid_Merged.fasta", "fasta")

seqs = SeqIO.read("../Fasta_from_HML/1.0.1a_NGS1-1_HML_Haploid_Merged.fasta", "fasta")

identifiers = [seq_record.id for seq_record in SeqIO.parse("../Fasta_from_HML/1.0.1a_NGS1-1_HML_Haploid_Merged.fasta", "fasta")]

records = list(SeqIO.parse("../Fasta_from_HML/1.0.1a_NGS1-1_HML_Haploid_Merged.fasta", "fasta"))
print("Found %i records" % len(records))

record_iterator = SeqIO.parse("../Fasta_from_HML/1.0.1a_NGS1-1_HML_Haploid_Merged.fasta", "fasta")
first_record = next(record_iterator)
print(first_record)

def get_accession(record):
    """"Given a SeqRecord, return the accession number as a string.
    e.g. "gi|2765613|emb|Z78488.1|PTZ78488" -> "Z78488.1"
    """
    parts = record.id.split("|")
    assert len(parts) == 5 and parts[0] == "gi" and parts[2] == "emb"
    return parts[3]